import{a as s,x as n}from"./index-Cre1HAju.js";const c="http://localhost:8000",u="http://localhost:8000",d="/api/budget/transfers/list/",h=6,f={async fetchTransfers(t="",e=1){const r=s();if(!r.token)throw new Error("Authentication token not found");const o={page:e.toString(),page_size:h.toString()},a={Authorization:`Bearer ${r.token}`,Accept:"application/json","Content-Type":"application/json"},i=t.trim()?{code:"FAR",search:t.trim()}:{code:"FAR"};try{return(await n.post(`${u}${d}`,i,{headers:a,params:o})).data}catch(p){throw console.error("Error fetching transfers:",p),p}},async deleteTransfer(t){const e=s();if(!e.token)throw new Error("Authentication token not found");try{return await n.delete(`${u}/api/budget/transfers/${t}/delete/`,{headers:{Authorization:`Bearer ${e.token}`,Accept:"application/json"}})}catch(r){throw console.error("Error deleting transfer:",r),r}},async getTransferDetails(t){const e=s();try{return(await n.get(`${c}/api/adjd-transfers/?transaction=${t}`,{headers:{Authorization:`Bearer ${e.token}`}})).data}catch(r){throw console.error("Error fetching transfer details:",r),r}},async submitTransferRequest(t){const e=s();try{return(await n.post(`${c}/api/adjd-transfers/submit/`,{transaction:t},{headers:{Authorization:`Bearer ${e.token}`}})).data}catch(r){throw console.error("Error submitting transfer request:",r),r}},async reopenTransferRequest(t){const e=s();try{return(await n.post(`${c}/api/adjd-transfers/reopen/`,{transaction:t,action:"reopen"},{headers:{Authorization:`Bearer ${e.token}`}})).data}catch(r){throw console.error("Error reopening transfer request:",r),r}},async generateReport(t){const e=s();try{return(await n.get(`${c}/api/budget/transfers/${t}/report/`,{headers:{Authorization:`Bearer ${e.token}`},responseType:"blob"})).data}catch(r){throw console.error("Error generating report:",r),r}},async createTransfer(t){const e=s();try{const r=t.map(a=>{const i={transaction:a.transaction,cost_center_code:a.cost_center_code,cost_center_name:a.cost_center_name,account_code:a.account_code,account_name:a.account_name,approved_budget:parseFloat(a.approved_budget)||0,available_budget:parseFloat(a.available_budget)||0,to_center:parseFloat(a.to_center)||0,encumbrance:parseFloat(a.encumbrance)||0,actual:parseFloat(a.actual)||0,done:1};return a.from_center!==null&&(i.from_center=parseFloat(a.from_center)||0),i});return(await n.post(`${c}/api/adjd-transfers/create/`,r,{headers:{Authorization:`Bearer ${e.token}`}})).data}catch(r){throw console.error("Error creating transfer request:",r),r}},async uploadFile(t,e){const r=s();try{const o=new FormData;return o.append("transaction_id",e.toString()),o.append("file",t),(await n.post(`${c}/api/budget/transfers/upload-files/`,o,{headers:{Authorization:`Bearer ${r.token}`,"Content-Type":"multipart/form-data"}})).data}catch(o){throw console.error("Error uploading file:",o),o}},async listFiles(t){const e=s();try{return(await n.get(`${c}/api/budget/transfers/list-files/?transaction_id=${t}`,{headers:{Authorization:`Bearer ${e.token}`}})).data}catch(r){throw console.error("Error listing files:",r),r}},async uploadExcelFile(t,e){const r=s();try{const o=new FormData;return o.append("file",t),o.append("transaction",e.toString()),(await n.post(`${c}/api/adjd-transfers/excel-upload/`,o,{headers:{Authorization:`Bearer ${r.token}`,"Content-Type":"multipart/form-data"}})).data}catch(o){throw console.error("Error uploading Excel file:",o),o}},async getPivotFundDetails(t,e){const r=s();try{return(await n.get(`${c}/api/accounts-entities/pivot-funds/getdetail/?entity_id=${t}&account_id=${e}`,{headers:{Authorization:`Bearer ${r.token}`}})).data}catch(o){throw(!o.response||o.response.status!==404)&&console.error("Error fetching pivot fund details:",o),o}},getTransfers(t){return n.get(`${c}/api/budget/transfers/?transaction=${t}`)},async getRejectionReports(t){const e=s();try{return(await n.get(`${c}/api/budget/transfers/list_reject/?transaction_id=${t}`,{headers:{Authorization:`Bearer ${e.token}`,Accept:"application/json","Content-Type":"application/json"}})).data}catch(r){throw console.error("Error fetching rejection reports:",r),r}}};export{f as t};
